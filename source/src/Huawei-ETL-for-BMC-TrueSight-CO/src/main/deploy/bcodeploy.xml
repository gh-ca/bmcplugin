<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<bcodeploy>
    <configuration>
        <product>BCO</product>
        <type>addon</type>
        <id>111999</id>
        <name>Huawei OceanStor ETL</name>
        <vendor>Huawei Inc</vendor>
        <description>You are about to install Huawei OceanStor ETL package.</description>
        <version>20.02.00</version>
        <date>01/19/2022 20:00:00</date>
        <checkLicense>license.txt</checkLicense>
        <BCOAcceptedVersions>10.0.00.[01:*];10.0.[01:*];10.3.[00:*];10.5.[00:*];10.7.[00:*];11.0.[00:*];11.3.[00:*];20.02.[00:*]</BCOAcceptedVersions>
        <message>Please note: the BMC TrueSight Capacity Optimization Scheduler will be restarted.</message>
        <options>2</options>
        <output>out_111999_${configuration.name}.pout</output>
        <fileName>Huawei-Storage-ETL-for-BMC-TrueSight-CO-20.02.00.zip</fileName>
        <ownership>102</ownership>
    </configuration>
    <component type="DATABASE">
        <actions>
            <action auto-idx="0" type="SQLQuery">
                <data><![CDATA[DELETE FROM TASK_PSET_PROPS
WHERE taskpsetid IN (SELECT taskpsetid FROM task_pset WHERE taskid IN (SELECT taskid FROM task WHERE etlmodid = 9889)) AND name LIKE 'unknownStatusManagement%']]></data>
            </action>
            <action auto-idx="1" type="SQLQuery">
                <properties>
                    <dbType>ORACLE</dbType>
                    <target>updateImportDisableOptionsOra.out</target>
                </properties>
                <data><![CDATA[
					DECLARE
					BEGIN
						insert into TASK_PSET_PROPS(TASKPSETID, NAME, VALUE)
select pset.TASKPSETID, 'configVolume' AS NAME, 'Imported' AS VALUE
  from TASK t inner join TASK_PSET pset on pset.TASKID = t.taskID
 where t.ETLMODID = 9889
   and exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'disableVolumeMonitoring' and VALUE = 'No')
   and exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'includeClasses' and VALUE like '%Volume%')
   and not exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'configVolume')
union
select pset.TASKPSETID, 'configVolume' AS NAME, 'Collected' AS VALUE
  from TASK t inner join TASK_PSET pset on pset.TASKID = t.taskID
 where t.ETLMODID = 9889
   and exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'disableVolumeMonitoring' and VALUE = 'No')
   and (not exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'includeClasses')
         or exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'includeClasses' and (VALUE IS NULL or VALUE not like '%Volume%')))
   and not exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'configVolume')
union
select pset.TASKPSETID, 'configVolume' AS NAME, 'Disabled' AS VALUE
  from TASK t inner join TASK_PSET pset on pset.TASKID = t.taskID
 where t.ETLMODID = 9889
   and exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'disableVolumeMonitoring' and VALUE = 'Yes');

delete from TASK_PSET_PROPS
 where NAME in ('disableVolumeMonitoring', 'includeClasses', 'includeClassesHint')
   and TASKPSETID in (select pset.TASKPSETID from TASK t inner join TASK_PSET pset on pset.TASKID = t.taskID where t.ETLMODID = 9889);

						commit;
          END;
				]]></data>
            </action>
            <action auto-idx="2" type="SQLQuery">
                <properties>
                    <dbType>POSTGRES</dbType>
                    <target>updateImportDisableOptionsPg.out</target>
                </properties>
                <data><![CDATA[insert into TASK_PSET_PROPS(TASKPSETID, NAME, VALUE)
select pset.TASKPSETID, 'configVolume' AS NAME, 'Imported' AS VALUE
  from TASK t inner join TASK_PSET pset on pset.TASKID = t.taskID
 where t.ETLMODID = 9889
   and exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'disableVolumeMonitoring' and VALUE = 'No')
   and exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'includeClasses' and VALUE like '%Volume%')
   and not exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'configVolume')
union
select pset.TASKPSETID, 'configVolume' AS NAME, 'Collected' AS VALUE
  from TASK t inner join TASK_PSET pset on pset.TASKID = t.taskID
 where t.ETLMODID = 9889
   and exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'disableVolumeMonitoring' and VALUE = 'No')
   and (not exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'includeClasses')
         or exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'includeClasses' and (VALUE IS NULL or VALUE not like '%Volume%')))
   and not exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'configVolume')
union
select pset.TASKPSETID, 'configVolume' AS NAME, 'Disabled' AS VALUE
  from TASK t inner join TASK_PSET pset on pset.TASKID = t.taskID
 where t.ETLMODID = 9889
   and exists (select TASKPSETID from TASK_PSET_PROPS where TASKPSETID = pset.TASKPSETID and NAME = 'disableVolumeMonitoring' and VALUE = 'Yes');

delete from TASK_PSET_PROPS
 where NAME in ('disableVolumeMonitoring', 'includeClasses', 'includeClassesHint')
   and TASKPSETID in (select pset.TASKPSETID from TASK t inner join TASK_PSET pset on pset.TASKID = t.taskID where t.ETLMODID = 9889);]]></data>
            </action>
            <action auto-idx="3" type="DBAlign">
                <properties>
                    <internal_input>dbalign/internal_input.xml</internal_input>
                    <source>dbalign/source.align</source>
                    <internal_datasource>dev-tscoas-103-pg</internal_datasource>
                </properties>
            </action>
            <action auto-idx="4" type="CLEARCACHE">
                <properties>
                    <parameter>DESTINATION=BROADCAST</parameter>
                </properties>
            </action>
        </actions>
    </component>
    <component type="SCHEDULER">
        <actions>
            <action auto-idx="5" type="ANT">
                <properties>
                    <target>delete</target>
                    </properties>
                <xmlData>
                    <project basedir="${deploy.res.path.scheduler}" default="delete" name="clear-lib-folder">
                      <target name="delete">
                         <echo>Removing Sentry's library from ${deploy.res.path.scheduler}/lib folder</echo>
                         <delete verbose="true">
                           <fileset dir="${deploy.res.path.scheduler}/lib">
    				                  <include name="**/oceanstor-rest-client-*.jar"/>
    				                  <include name="**/jsch-*.jar"/>
    				                  <include name="**/xstream-*.jar"/>
    				                  <include name="**/commons-io-*.jar"/>
    				                  <include name="**/commons-compress-*.jar"/>
    				                  <include name="**/json-*.jar"/>
    			                 </fileset>
                         </delete>
                      </target>
                    </project>
                </xmlData>
            </action>
            <action auto-idx="6" type="LIB">
                <properties>
                    <!--<source>scheduler/libs/oceanstor-rest-client-one-1.6.3.jar</source>-->
                    <source>scheduler/libs/oceanstor-rest-client-1.6.3.jar</source>
                    <targetComponents>custom[${deploy.res.path.scheduler}/libext]</targetComponents>
                    </properties>
            </action>
            <action auto-idx="7" type="LIB">
                <properties>
                    <source>scheduler/libs/xstream-1.4.10.jar</source>
                    <targetComponents>custom[${deploy.res.path.scheduler}/libext]</targetComponents>
                    </properties>
            </action>
            <action auto-idx="8" type="LIB">
                <properties>
                    <source>scheduler/libs/json-3.1.1.jar</source>
                    <targetComponents>custom[${deploy.res.path.scheduler}/libext]</targetComponents>
                    </properties>
            </action>
            <action auto-idx="9" type="LIB">
                <properties>
                    <source>scheduler/libs/jsch-0.1.53.jar</source>
                    <targetComponents>custom[${deploy.res.path.scheduler}/libext]</targetComponents>
                    </properties>
            </action>
            <action auto-idx="10" type="LIB">
                <properties>
                    <source>scheduler/libs/commons-io-2.4.jar</source>
                    <targetComponents>custom[${deploy.res.path.scheduler}/libext]</targetComponents>
                    </properties>
            </action>
            <action auto-idx="11" type="LIB">
                <properties>
                    <source>scheduler/libs/commons-compress-1.7.jar</source>
                    <targetComponents>custom[${deploy.res.path.scheduler}/libext]</targetComponents>
                </properties>
            </action>
            <action auto-idx="12" type="LIB">
                <properties>
                    <source>scheduler/libs/storage-etl-huawei-20.02.00.jar</source>
                    <targetComponents>custom[${deploy.res.path.scheduler}/libext]</targetComponents>
                </properties>
            </action>
            <action auto-idx="13" type="LIB">
                <properties>
                    <source>scheduler/libs/xz-1.4.jar</source>
                    <targetComponents>custom[${deploy.res.path.scheduler}/libext]</targetComponents>
                </properties>
            </action>
            <action auto-idx="14" type="LIB">
                <properties>
                    <source>scheduler/libs/xpp3_min-1.1.4c.jar</source>
                    <targetComponents>custom[${deploy.res.path.scheduler}/libext]</targetComponents>
                </properties>
            </action>
            <action auto-idx="15" type="LIB">
                <properties>
                    <source>scheduler/libs/xmlpull-1.1.3.1.jar</source>
                    <targetComponents>custom[${deploy.res.path.scheduler}/libext]</targetComponents>
                </properties>
            </action>
            <action auto-idx="16" type="LIB">
                <properties>
                    <source>scheduler/libs/sqlite-jdbc-3.23.1.jar</source>
                    <targetComponents>custom[${deploy.res.path.scheduler}/libext]</targetComponents>
                </properties>
            </action>
<!--            <action auto-idx="16" type="LIB">-->
<!--                <properties>-->
<!--                    <source>scheduler/libs/ojdbc8-19.3.0.0.jar</source>-->
<!--                    <targetComponents>custom[${deploy.res.path.scheduler}/libext]</targetComponents>-->
<!--                </properties>-->
<!--            </action>-->
            <action auto-idx="17" type="RESTART"/>
        </actions>
    </component>
</bcodeploy>
